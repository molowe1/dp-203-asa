{
	"name": "05-toasa",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "sparkpool",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "cb9b7ad9-d0ca-4c90-9ebf-0e8b97290e64"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/976a6163-6cea-4dff-9b57-f63c294f349e/resourceGroups/dp-203-demo/providers/Microsoft.Synapse/workspaces/dwhsection4/bigDataPools/sparkpool",
				"name": "sparkpool",
				"type": "Spark",
				"endpoint": "https://dwhsection4.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/sparkpool",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"// Lab - Spark Pool - Write data to Azure Synapse\n",
					"\n",
					"import org.apache.spark.sql.types._\n",
					"import org.apache.spark.sql.functions._\n",
					"\n",
					"\n",
					"val dataSchema = StructType(Array(    \n",
					"    StructField(\"Correlationid\", StringType, true),\n",
					"    StructField(\"Operationname\", StringType, true),\n",
					"    StructField(\"Status\", StringType, true),\n",
					"    StructField(\"Eventcategory\", StringType, true),\n",
					"    StructField(\"Level\", StringType, true),\n",
					"    StructField(\"Time\", TimestampType, true),\n",
					"    StructField(\"Subscription\", StringType, true),\n",
					"    StructField(\"Eventinitiatedby\", StringType, true),\n",
					"    StructField(\"Resourcetype\", StringType, true),\n",
					"    StructField(\"Resourcegroup\", StringType, true),\n",
					"    StructField(\"Resource\", StringType, true)))\n",
					"\n",
					"\n",
					"val df = spark.read.format(\"csv\").option(\"header\",\"true\").schema(dataSchema).load(\"abfss://csv@datalake244434.dfs.core.windows.net/Log.csv\")\n",
					"\n",
					"display(df)\n",
					"\n",
					"\n",
					"\n",
					"val writeOptionsWithBasicAuth:Map[String, String] = Map(Constants.SERVER -> \"dataworkspace2000939.sql.azuresynapse.net\",\n",
					"                                           Constants.USER -> \"sqladminuser\",\n",
					"                                           Constants.PASSWORD -> \"sqlpassword@123\",\n",
					"                                           Constants.DATA_SOURCE -> \"pooldb\",                                    \n",
					"                                           Constants.TEMP_FOLDER -> \"abfss://staging@datalake244434.dfs.core.windows.net\",\n",
					"                                           Constants.STAGING_STORAGE_ACCOUNT_KEY -> \"dilbGv2rof6G4emB0qWgVwAOOexu/bIpvJiUnfal7+klHqCsKLB+JkQzMfRlgu0fm14iUFNHXPeU+AStZZXK2w==\")\n",
					"\n",
					"// Also given the Storage Blob Contributor role for the storage account\n",
					"import org.apache.spark.sql.SaveMode\n",
					"import com.microsoft.spark.sqlanalytics.utils.Constants\n",
					"import org.apache.spark.sql.SqlAnalyticsConnector._\n",
					"\n",
					"df.\n",
					"    write.    \n",
					"    options(writeOptionsWithBasicAuth).\n",
					"    mode(SaveMode.Overwrite).    \n",
					"    synapsesql(tableName = \"pooldb.dbo.logdata_parquet\",                 \n",
					"                tableType = Constants.INTERNAL,                 \n",
					"                location = None\n",
					"                )\n",
					"\n",
					""
				],
				"execution_count": null
			}
		]
	}
}